/* license section

   Aii is free software: you can redistribute it and/or modify   it under the terms of the GNU General Public License as published by   the Free Software Foundation, either version 3 of the License, or   (at your option) any later version.   Aii is distributed in the hope that it will be useful,   but WITHOUT ANY WARRANTY; without even the implied warranty of   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   GNU General Public License for more details.   You should have received a copy of the GNU General Public License   along with Aii.  If not, see <http://www.gnu.org/licenses/>.   © Swfdong 2010 */ //校内工具类,用不显示的HTML Holder实现Ajax查询等功能package aii.net.xiaonei {	import flash.events.Event;	import flash.net.navigateToURL;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLRequestMethod;	import flash.net.URLRequestHeader;	import flash.net.URLVariables;	import flash.system.System;	import aii.utils.Logger;	import aii.utils.StringUtil;
	import aii.net.json.JSON;
	public final class XNGadget {		//设置默认起始页(设置页面内容为空的friendsSelector.do以节省内存开销)		private static const XN_UA:String = "Aii XNGadget [By Swfdong]";		private static const DEFAULT_URL:String = "http://friend.renren.com/friendsSelector.do";		private static const CHEAT_HOME_REFERER:URLRequestHeader = new URLRequestHeader("Referer", "http://www.renren.com/Home.do");		private static const CHEAT_AJAX_REFERER:URLRequestHeader = new URLRequestHeader("Referer", "http://status.renren.com/ajaxproxy.htm");		private var _loggedIn:Boolean = false;		private var _ticket:String;		private var _infoID:String;		private var _updateStatusCallback:Function;		private var _infoCallback:Function;		private var _searchCallback:Function;		private var _friendsCallback:Function;		private var _getGossipCallback:Function;		private var _sendGossipCallback:Function;		private var _id:String;		private var loginURL:String;		private var reqURL:String;		private var urlLoader:URLLoader;		private var urlRequest:URLRequest;		private var requestCallback:Function;		private var requestCount:uint = 0;
		//初始化		public function XNGadget():void {			urlRequest = new URLRequest();			urlRequest.data = null;			urlRequest.userAgent = XN_UA;			urlRequest.followRedirects = true;			urlRequest.manageCookies = true;			urlLoader = new URLLoader();			System.useCodePage = false;		}
		//跳转		public function redirect(u:String):void {			urlRequest.url = loginURL + escape(u);			navigateToURL(urlRequest, "_blank");		}
		//修改状态		public function updateStatus(s:String, callBack:Function):void {			requestCount = 0;			_updateStatusCallback = callBack;			urlRequest.data = new URLVariables();			urlRequest.data.c = urlRequest.data.raw = s;			urlRequest.data.isAtHome = 0;			urlRequest.data.statusPage = 1;			urlRequest.data.publisher_form_ticket = urlRequest.data.requestToken = 1747505808;			request("http://status.renren.com/doing/update.do?", updateStatusCallback, true);		}
		public function updateStatusCallback(data:String):void {			//匹配数据			var resObj:Object = JSON.decode(data);			if (resObj.code == 0) {				//_updateStatusCallback(data);			}			System.gc();		}
		//获取信息		public function getInfo(id:String, callBack:Function):void {			requestCount = 0;			_infoID = id;			_infoCallback = callBack;			request("http://renren.com/profile.do?id=" + id + "&v=infoex", getInfoCallback);		}
		public function getInfoCallback(data:String):void {			//匹配数据			data = data.replace(/(\n|\r|\t)/g, "");			data = data.replace(/<(\/){0,1}(div|dl|h4|dd|ul|li|img|table|tr|tbody|td)[^<>]*>/g, "");			data = data.replace(/<a [^<>]*>(|查看全部)<\/a>/g, "");			data = data.replace(/<(dt|th)[^<>]*>/g, "<b><br>");			data = data.replace(/<span[^<>]*>/g, "<br><br><b>");			data = data.replace(/<\/(dt|th|span)[^<>]*>/g, "</b>&nbsp;");			data = data.replace(/&bull;/g, "•");			data = data.replace(/<\/a><a/g, "</a>•<a");			data = data.replace(/<br><b><\/b>/g, "");			data = StringUtil.replaceLink(data);			data = data.substr(data.indexOf("<b>"));			_infoCallback(_infoID, data);			System.gc();		}
		//搜索好友		public function searchFriend(val:String, group:String, callBack:Function = null, all:Boolean = false):void {			_searchCallback = callBack;			var sq:String = 'http://friend.renren.com/friendsSelector.do?p={"init":' + all + ',"qkey":"friend","uid":true,"uname":false,"uhead":false,"limit":100,"param":{},"query":"' + val + '","group":"' + group + '","net":""}';			request(sq, searchComplete);		}
		//搜索回馈		private function searchComplete(data:String):void {			trace(data);			var resObj:Object = JSON.decode(data);			if (_searchCallback != null) {				_searchCallback(resObj);			}		}
		//取消新鲜事		public function dispatchNotice(type:String, callBack:Function):void {		}
		//获取留言		public function getGossip(id:String, callBack:Function, withMe:Boolean = true):void {			var gp:String;			if (withMe) {				gp = "http://gossip.renren.com/ajaxgossiplist.do?id=" + _id + "&f=" + id;			} else {				gp = "http://gossip.renren.com/ajaxgossiplist.do?id=" + id;			}			request(gp, getGossipComplete);		}
		//获取留言回馈		private function getGossipComplete(data:String):void {			var resObj:Object = JSON.decode(data);			_getGossipCallback(resObj);		}
		//发送留言		public function sendGossip(to:String, content:String, only:Boolean = false, replyMode:Boolean = false):void {			urlRequest.data.body = escape(content);			urlRequest.data.cc = to;			urlRequest.data.headUrl = urlRequest.data.headUrl = "";			urlRequest.data.only_to_me = only ? 1 : 0;			urlRequest.data.mode = (replyMode ? "conversation" : "");			request("http://gossip.renren.com/gossip.do", sendGossipComplete);		}
		public function sendGossipComplete(data:String):void {			var resObj:Object = JSON.decode(data);			_sendGossipCallback(resObj);		}
		//更多留言		public function moreGossip(id:String, withMe:Boolean = true):void {			if (withMe) {				redirect("http://gossip.renren.com/getgossiplist.do?id=" + _id + "&f=" + id);			} else {				redirect("http://gossip.renren.com/getgossiplist.do?id=" + id);			}		}
		//获取好友		public function getFriendsList(callBack:Function):void {			_friendsCallback = callBack;			//var sq:String='http://friend.renren.com/friendsSelector.do?p={"init":true,"uid":true,"uname":true,"uhead":true,"group":true,"param":{}}';			var sq:String = "http://friend.renren.com/myfriendlistx.do";			request(sq, friendsListComplete);		}
		private function friendsListComplete(data:String):void {			var si:int = data.lastIndexOf("var friends=") + 12;			var ei:int = data.indexOf("}];", si) + 2;			data = '{"list":' + data.substring(si, ei) + "}";			var resObj:Object = JSON.decode(data);			data = null;			if (_friendsCallback != null) {				_friendsCallback(resObj);			}		}
		//登录		private function login():void {			request(DEFAULT_URL);		}
		//请求核心方法(若有data则自动转换为post)		private function request(u:String, callBack:Function = null, ajax:Boolean = false):void {			urlRequest.url = reqURL = u;			urlRequest.method = (urlRequest.data == null ? URLRequestMethod.GET : URLRequestMethod.POST);			if (callBack != null) {				requestCallback = callBack;			}			if (ajax) {				urlRequest.requestHeaders = [ CHEAT_AJAX_REFERER ];			} else {				urlRequest.requestHeaders = [ CHEAT_HOME_REFERER ];			}			urlLoader.load(urlRequest);			urlLoader.addEventListener(Event.COMPLETE, requestHandler);		}
		//回馈处理		private function requestHandler(e:Event):void {			//删除侦听			urlLoader.removeEventListener(Event.COMPLETE, requestHandler);			//未登录状态继续登录			if (urlLoader.data.indexOf("系统错误") != -1 || urlLoader.data.indexOf("login") != -1 || urlLoader.data.indexOf('{"status":-1}') == 0) {				_loggedIn = false;				if (requestCount < 3) {					Logger.warn("[XNGadget]网页端连接尚未登录，登录中...");					request(loginURL + escape(reqURL));					requestCount++;				}			} else {				requestCount = 0;				//回调(urlLoader.data==""说明Ticket失效)				if (urlLoader.data != "" && requestCallback != null) {					requestCallback(urlLoader.data);					urlRequest.data = null;					if (!_loggedIn) {						_loggedIn = true;						Logger.log("[XNGadget]网页端已登录");					}				}			}		}
		//Setter		public function set ticket(t:String):void {			_ticket = t;			_id = _ticket.substring(0, _ticket.indexOf("$"));			loginURL = "http://gadget.talk.renren.com/redirect.do?t=" + _ticket + "&h=" + _id + "&u=";			login();		}	}}